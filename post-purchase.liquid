<!-- Fire GA event -->
<script>
    // make sure the initial conversion isn't tracked twice
    if (!Shopify.wasPostPurchasePageSeen) {
        const order = window.Shopify.order;

        // track initial conversion
        dataLayer.push({ecommerce: null});
        dataLayer.push({
            event: "purchase",
            ecommerce: {
                currency: order.currency,
                transaction_id: order.id,
                affiliation: "Online Store",
                value: order.totalPrice,
                coupon: order.discounts,
                items: order.lineItems.map(function (item) {
                    return {
                        item_id: item.product.id,
                        item_name: item.title,
                        item_category: item.product.type,
                        item_variant: null,
                        price: item.price,
                        quantity: item.quantity,
                        subscription_item: item.title.includes("Subscription")
                    }
                }),
                subscription_included: order.lineItems.filter(item => item.title.includes("Subscription")).length > 0,
            }
        });
    }

    // set up additional conversion tracking if they take an upsell
    Shopify.on('CheckoutAmended', function (newOrder, previousOrder) {
        // identify which items were recently added, if any
        const oldItems = previousOrder.lineItems.map(function (line) {
            return line.id;
        });

        const addedItems = newOrder.lineItems.filter(
            function (line) {
                return oldItems.indexOf(line.id) < 0;
            }
        );

        // no new items were added, so we skip conversion tracking
        if (addedItems.length === 0) {
            return;
        }

        // track additional purchase
        dataLayer.push({ecommerce: null});
        dataLayer.push({
            event: "purchase",
            ecommerce: {
                currency: newOrder.currency,
                transaction_id: newOrder.id,
                affiliation: "Online Store",
                value: newOrder.totalPrice - previousOrder.totalPrice,
                items: addedItems.map(function (item) {
                    return {
                        item_id: item.product.id,
                        item_name: item.title,
                        item_category: item.product.type,
                        item_variant: null,
                        price: item.price,
                        quantity: item.quantity,
                        subscription_item: item.title.includes("Subscription")
                    };
                }),
                subscription_included: addedItems.filter(item => item.title.includes("Subscription")).length > 0,
            }
        });
    });
</script>